C:\Users\user\.jdks\jdk1.8.0_422\bin\java.exe "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.3.4\lib\idea_rt.jar=51481:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.3.4\bin" -Dfile.encoding=UTF-8 -classpath C:\Users\user\.jdks\jdk1.8.0_422\jre\lib\charsets.jar;C:\Users\user\.jdks\jdk1.8.0_422\jre\lib\ext\access-bridge-64.jar;C:\Users\user\.jdks\jdk1.8.0_422\jre\lib\ext\cldrdata.jar;C:\Users\user\.jdks\jdk1.8.0_422\jre\lib\ext\dnsns.jar;C:\Users\user\.jdks\jdk1.8.0_422\jre\lib\ext\jaccess.jar;C:\Users\user\.jdks\jdk1.8.0_422\jre\lib\ext\jfxrt.jar;C:\Users\user\.jdks\jdk1.8.0_422\jre\lib\ext\localedata.jar;C:\Users\user\.jdks\jdk1.8.0_422\jre\lib\ext\nashorn.jar;C:\Users\user\.jdks\jdk1.8.0_422\jre\lib\ext\sunec.jar;C:\Users\user\.jdks\jdk1.8.0_422\jre\lib\ext\sunjce_provider.jar;C:\Users\user\.jdks\jdk1.8.0_422\jre\lib\ext\sunmscapi.jar;C:\Users\user\.jdks\jdk1.8.0_422\jre\lib\ext\sunpkcs11.jar;C:\Users\user\.jdks\jdk1.8.0_422\jre\lib\ext\zipfs.jar;C:\Users\user\.jdks\jdk1.8.0_422\jre\lib\jce.jar;C:\Users\user\.jdks\jdk1.8.0_422\jre\lib\jfr.jar;C:\Users\user\.jdks\jdk1.8.0_422\jre\lib\jfxswt.jar;C:\Users\user\.jdks\jdk1.8.0_422\jre\lib\jsse.jar;C:\Users\user\.jdks\jdk1.8.0_422\jre\lib\management-agent.jar;C:\Users\user\.jdks\jdk1.8.0_422\jre\lib\resources.jar;C:\Users\user\.jdks\jdk1.8.0_422\jre\lib\rt.jar;C:\gb\wfe\JMHTest\JMHTest\target\classes;C:\Users\user\.m2\repository\org\openjdk\jmh\jmh-core\1.37\jmh-core-1.37.jar;C:\Users\user\.m2\repository\net\sf\jopt-simple\jopt-simple\5.0.4\jopt-simple-5.0.4.jar;C:\Users\user\.m2\repository\org\apache\commons\commons-math3\3.6.1\commons-math3-3.6.1.jar;C:\Users\user\.m2\repository\org\openjdk\jmh\jmh-generator-annprocess\1.37\jmh-generator-annprocess-1.37.jar org.example.App
# JMH version: 1.37
# VM version: JDK 1.8.0_422, OpenJDK 64-Bit Server VM, 25.422-b05
# VM invoker: C:\Users\user\.jdks\jdk1.8.0_422\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.3.4\lib\idea_rt.jar=51481:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.3.4\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.App.getTemplateValue

# Run progress: 0,00% complete, ETA 00:00:32
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 15720,091 ns/op
# Warmup Iteration   2: 11971,797 ns/op
# Warmup Iteration   3: 8000,211 ns/op
# Warmup Iteration   4: 7542,948 ns/op
# Warmup Iteration   5: 7482,899 ns/op
Iteration   1: 7456,719 ns/op
Iteration   2: 7498,746 ns/op
Iteration   3: 7452,075 ns/op

# Run progress: 25,00% complete, ETA 00:00:28
# Fork: 1 of 1
# Warmup Iteration   1: 9569,223 ns/op
# Warmup Iteration   2: 8730,541 ns/op
# Warmup Iteration   3: 8011,129 ns/op
# Warmup Iteration   4: 7480,403 ns/op
# Warmup Iteration   5: 7669,788 ns/op
Iteration   1: 7455,566 ns/op
Iteration   2: 7437,173 ns/op
Iteration   3: 7457,050 ns/op


Result "org.example.App.getTemplateValue":
  7449,930 ±(99.9%) 202,006 ns/op [Average]
  (min, avg, max) = (7437,173, 7449,930, 7457,050), stdev = 11,073
  CI (99.9%): [7247,924, 7651,936] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 1.8.0_422, OpenJDK 64-Bit Server VM, 25.422-b05
# VM invoker: C:\Users\user\.jdks\jdk1.8.0_422\jre\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.3.4\lib\idea_rt.jar=51481:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.3.4\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.App.getTemplateValueFast

# Run progress: 50,00% complete, ETA 00:00:18
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 1971,401 ns/op
# Warmup Iteration   2: 1634,871 ns/op
# Warmup Iteration   3: 1376,241 ns/op
# Warmup Iteration   4: 1380,522 ns/op
# Warmup Iteration   5: 1388,584 ns/op
Iteration   1: 1379,219 ns/op
Iteration   2: 1384,022 ns/op
Iteration   3: 1395,669 ns/op

# Run progress: 75,00% complete, ETA 00:00:09
# Fork: 1 of 1
# Warmup Iteration   1: 1974,190 ns/op
# Warmup Iteration   2: 1638,376 ns/op
# Warmup Iteration   3: 1409,733 ns/op
# Warmup Iteration   4: 1408,228 ns/op
# Warmup Iteration   5: 1400,596 ns/op
Iteration   1: 1376,739 ns/op
Iteration   2: 1383,934 ns/op
Iteration   3: 1394,178 ns/op


Result "org.example.App.getTemplateValueFast":
  1384,950 ±(99.9%) 159,883 ns/op [Average]
  (min, avg, max) = (1376,739, 1384,950, 1394,178), stdev = 8,764
  CI (99.9%): [1225,067, 1544,834] (assumes normal distribution)


# Run complete. Total time: 00:00:36

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                 Mode  Cnt     Score     Error  Units
App.getTemplateValue      avgt    3  7449,930 ± 202,006  ns/op
App.getTemplateValueFast  avgt    3  1384,950 ± 159,883  ns/op

Process finished with exit code 0
